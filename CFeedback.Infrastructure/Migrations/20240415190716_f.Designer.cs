// <auto-generated />
using System;
using CFeedback.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CFeedback.Infrastructure.Migrations
{
    [DbContext(typeof(CFeedbackContext))]
    [Migration("20240415190716_f")]
    partial class f
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CFeedback.Infrastructure.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Personel"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Product"
                        });
                });

            modelBuilder.Entity("CFeedback.Infrastructure.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FeedbackId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            FeedbackId = 1,
                            CategoryId = 1,
                            CustomerName = "Karen Whales",
                            Description = "Bob didn't treat me well",
                            SubmissionDate = new DateTime(2024, 4, 15, 19, 7, 16, 211, DateTimeKind.Utc).AddTicks(9844)
                        },
                        new
                        {
                            FeedbackId = 2,
                            CategoryId = 2,
                            CustomerName = "Carlos Duran",
                            Description = "The product was deffective, it didn't turn on",
                            SubmissionDate = new DateTime(2024, 4, 15, 19, 7, 16, 211, DateTimeKind.Utc).AddTicks(9846)
                        },
                        new
                        {
                            FeedbackId = 3,
                            CategoryId = 1,
                            CustomerName = "Chris Whales",
                            Description = "Carlos didn't treat me well",
                            SubmissionDate = new DateTime(2024, 3, 15, 19, 7, 16, 211, DateTimeKind.Utc).AddTicks(9848)
                        },
                        new
                        {
                            FeedbackId = 4,
                            CategoryId = 2,
                            CustomerName = "Tomy Duran",
                            Description = "Broken part",
                            SubmissionDate = new DateTime(2024, 3, 15, 19, 7, 16, 211, DateTimeKind.Utc).AddTicks(9859)
                        });
                });

            modelBuilder.Entity("CFeedback.Infrastructure.Models.Feedback", b =>
                {
                    b.HasOne("CFeedback.Infrastructure.Models.Category", "Category")
                        .WithMany("Feedback")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CFeedback.Infrastructure.Models.Category", b =>
                {
                    b.Navigation("Feedback");
                });
#pragma warning restore 612, 618
        }
    }
}
